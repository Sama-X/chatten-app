"""
Django settings for chatgpt project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path
import sys

os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

sys.path.insert(0, str(BASE_DIR))
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&7_%)frnf2fobw81)jjt5)8)i&a9!=mhezjsot$4o-a@mw!s$f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('ENV', 'development') != 'production'
CURRENT_ENV = os.environ.get('ENV', 'development')

ALLOWED_HOSTS = ['*']

"""
CORS CONFIG
"""
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = ()

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'client-id',
    'client-version'
)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'channels',
    'django_eventstream',

    'users',
    'chat',
    'order',
    'asset',
    'corsheaders',
]

MIDDLEWARE = [
    'django_grip.GripMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'chatgpt.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'chatgpt.wsgi.application'
ASGI_APPLICATION = 'chatgpt.asgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'zh'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# REST_FRAMEWORK
THROTTLE_SEND_SMS = 'send-sms'
REST_FRAMEWORK = {
    # 'DEFAULT_PERMISSION_CLASSES': (
    #     'rest_framework.permissions.IsAuthenticated',
    # ),
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer'
    ],
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.ScopedRateThrottle',
    ],
    'DEFAULT_THROTTLE_RATES': {
        THROTTLE_SEND_SMS: '100/day',
    },
    'EXCEPTION_HANDLER': "base.middleware.exception_catch"
}

# LOGGER CONFIG
BASE_LOG_DIR = os.path.join(BASE_DIR, 'logs')
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': '[%(processName)s - %(process)d] %(levelname)s %(asctime)s %(module)s %(funcName)s %(message)s'
        },
        'error': {
            'format': '[%(processName)s - %(process)d] %(levelname)s %(asctime)s %(pathname)s %(module)s %(funcName)s %(message)s '
        },
        'simple': {
            'format': '[%(processName)s - %(process)d] %(levelname)s %(asctime)s %(funcName)s %(message)s'
        },
        'collect': {
            'format': '[%(processName)s - %(process)d] %(message)s'
        }
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'default': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_LOG_DIR, "info.log"),
            'maxBytes': 1024 * 1024 * 20,
            'backupCount': 10,
            'formatter': 'standard',
            'encoding': 'utf-8',
        },
        'error': {
            'level': 'WARN',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_LOG_DIR, "error.log"),
            'maxBytes': 1024 * 1024 * 20,
            'backupCount': 10,
            'formatter': 'error',
            'encoding': 'utf-8',
        },
    },

    'loggers': {
        '': {
            'handlers': ['default', 'error'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'collect': {
            'handlers': ['console', 'default'],
            'level': 'INFO',
        }
    },
}

# LOCALE_PATHS
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

"""
REDIS configurate
"""
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/0',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'PASSWORD': '',
        },
        'KEY_PREFIX': 'chatgpt'
    },
}

WECHAT = {
    "APP_ID": 'wx638bec1594b09d2f',  # 小程序appId
    "APP_SECRET": '7ddb1b396707f419563d8da6e1a96ba1',  # 小程序appSecret
    "MCH_ID": '1644933727',  # 商户号
    "MCH_CERT_SERIAL_NO": '68FF233D8C6260FDB4D33D45D42271519283D0B9', # 商户证书序列号
    "MCH_API_V3_KEY": 'cityprotectiontech123456789maofa',              # 商户APIv3密钥
    "API_CLIENT_KEY_PATH": os.path.join(BASE_DIR, "apiclient_key.pem"),  # 证书路径,
    "CODE_TO_SESSION_URL": 'https://api.weixin.qq.com/sns/jscode2session',
    "PAY_NOTIFY_URL": 'https://pay-api.citypro-tech.com/api/v1/order/native_notify/',
}

"""
CHATGPT configurate
"""

CHATGPT_KEYS = []
CHATGPT_PROXY = None
CHATGPT_WALLET = '0x132E92D4E87dfc1602349869a27e51C5C3455c7C'

# SAMA CONFIG

SAMA_CLIENT = os.path.join(BASE_DIR, 'bin', 'sama-cli')
SAMA_WALLET_ADDRESS = ''
SAMA_WALLET_PRIVATE = ''
SAMA_NODE_SERVER = ''
SAMA_UNIT = 1000

CHAIN_SAMA = "sama"

# Server-Sent-Events
EVENTSTREAM_ALLOW_ORIGIN = '*'
EVENTSTREAM_ALLOW_CREDENTIALS = True
EVENTSTREAM_ALLOW_HEADERS = 'Authorization'

"""
CHANNEL LAYERS
"""
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("localhost", 6379)],
        },
    },
}

# share config

SHARE_REWARD_EXPERIENCE = 10

# dingtalk
DINGTALK_BUSINESS_ROOM_SECRET = 'SEC653044f6b058177d402561efa38d07f03ac626af093b31496e2f6df78966ffaa'
DINGTALK_BUSINESS_ROOM_TOKEN = 'a03cf9328ee662f6970968c0b9ed02b960ec32f5b1262ff41b66af319d7b3b5a'


# local config
try:
    from chatgpt.local_settings import *
except ImportError:
    pass
